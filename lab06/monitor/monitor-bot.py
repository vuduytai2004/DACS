import psutil
import logging
import time
import asyncio
from telegram import Bot

# Thay th·∫ø b·∫±ng m√£ truy c·∫≠p API c·ªßa bot b·∫°n ƒë√£ t·∫°o
BOT_TOKEN = '6888243924:AAFJCe4ktZVGPhz2_D07AK148ZJOhsNamQQ'
# Thay th·∫ø b·∫±ng chat_id c·ªßa cu·ªôc tr√≤ chuy·ªán b·∫°n mu·ªën g·ª≠i th√¥ng b√°o t·ªõi
CHAT_ID = '-4031606701'

# C·∫•u h√¨nh logging
logging.basicConfig(level=logging.INFO, 
                    filename="system_monitor_bot.log", 
                    format="%(asctime)s - %(levelname)s - %(message)s")
logger = logging.getLogger()

# H√†m ghi log
def log_info(category, message):
    logger.info(f"{category}: {message}")
    print(f"{category}: {message}")

# H√†m g·ª≠i tin nh·∫Øn qua Telegram
async def send_telegram_message(message):
    try:
        bot = Bot(token=BOT_TOKEN)
        await bot.send_message(chat_id=CHAT_ID, text=message)
    except Exception as e:
        log_info("Telegram Error", f"Failed to send message: {e}")

# H√†m gi√°m s√°t CPU v√† b·ªô nh·ªõ
def monitor_cpu_memory():
    cpu_percent = psutil.cpu_percent()
    memory_info = psutil.virtual_memory()

    log_info("CPU", f"Usage: {cpu_percent}%")
    log_info("Memory", f"Usage: {memory_info.percent}%")

    # G·ª≠i th√¥ng b√°o qua Telegram
    message = f"üìä System Monitor\nCPU Usage: {cpu_percent}%\nMemory Usage: {memory_info.percent}%"
    asyncio.run(send_telegram_message(message))

# H√†m th·ª±c hi·ªán gi√°m s√°t to√†n b·ªô h·ªá th·ªëng
def monitor_system():
    log_info("System Monitor", "Starting system monitoring...")
    
    
    while True:
        monitor_cpu_memory()
        log_info("System Monitor", "---")
        time.sleep(60)

if __name__ == "__main__":
    monitor_system()